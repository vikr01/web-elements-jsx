import type { HtmlTags } from 'html-tags';

enum HtmlTagEnum {
  a = 'a',
  abbr = 'abbr',
  address = 'address',
  area = 'area',
  article = 'article',
  aside = 'aside',
  audio = 'audio',
  b = 'b',
  base = 'base',
  bdi = 'bdi',
  bdo = 'bdo',
  blockquote = 'blockquote',
  body = 'body',
  br = 'br',
  button = 'button',
  canvas = 'canvas',
  caption = 'caption',
  cite = 'cite',
  code = 'code',
  col = 'col',
  colgroup = 'colgroup',
  data = 'data',
  datalist = 'datalist',
  dd = 'dd',
  del = 'del',
  details = 'details',
  dfn = 'dfn',
  dialog = 'dialog',
  div = 'div',
  dl = 'dl',
  dt = 'dt',
  em = 'em',
  embed = 'embed',
  fieldset = 'fieldset',
  figcaption = 'figcaption',
  figure = 'figure',
  footer = 'footer',
  form = 'form',
  h1 = 'h1',
  h2 = 'h2',
  h3 = 'h3',
  h4 = 'h4',
  h5 = 'h5',
  h6 = 'h6',
  head = 'head',
  header = 'header',
  hgroup = 'hgroup',
  hr = 'hr',
  html = 'html',
  i = 'i',
  iframe = 'iframe',
  img = 'img',
  input = 'input',
  ins = 'ins',
  kbd = 'kbd',
  label = 'label',
  legend = 'legend',
  li = 'li',
  link = 'link',
  main = 'main',
  map = 'map',
  mark = 'mark',
  math = 'math',
  menu = 'menu',
  meta = 'meta',
  meter = 'meter',
  nav = 'nav',
  noscript = 'noscript',
  object = 'object',
  ol = 'ol',
  optgroup = 'optgroup',
  option = 'option',
  output = 'output',
  p = 'p',
  picture = 'picture',
  pre = 'pre',
  progress = 'progress',
  q = 'q',
  rp = 'rp',
  rt = 'rt',
  ruby = 'ruby',
  s = 's',
  samp = 'samp',
  script = 'script',
  search = 'search',
  section = 'section',
  select = 'select',
  slot = 'slot',
  small = 'small',
  source = 'source',
  span = 'span',
  strong = 'strong',
  style = 'style',
  sub = 'sub',
  summary = 'summary',
  sup = 'sup',
  svg = 'svg',
  table = 'table',
  tbody = 'tbody',
  td = 'td',
  template = 'template',
  textarea = 'textarea',
  tfoot = 'tfoot',
  th = 'th',
  thead = 'thead',
  time = 'time',
  title = 'title',
  tr = 'tr',
  track = 'track',
  u = 'u',
  ul = 'ul',
  var = 'var',
  video = 'video',
  wbr = 'wbr',
};

// Verifying all elements of HtmlTagEnum are in HtmlTags
declare function verifyEnumExtendsTagsType<T extends HtmlTags>(p: T): T;
type __donotuse_verification_enum_extends_tags = typeof verifyEnumExtendsTagsType<HtmlTagEnum>;
// @ts-expect-error we want this to error since '$$faketag' is not a valid html tag
type __donotuse_verify_non_native_tag_fails_as_tag = typeof verifyEnumExtendsTagsType<'$$faketag'>;

// Verifying all elements of HtmlTags are in HtmlTagEnum
declare function verifyTagsExtendsEnumsType<T extends `${HtmlTagEnum}`>(p: T): T;
type __donotuse_verification_tags_extends_enums = typeof verifyTagsExtendsEnumsType<HtmlTags>;
// @ts-expect-error we want this to error since '$$faketag' is not a valid html tag
type __donotuse_verify_non_native_tag_fails_as_enum = typeof verifyTagsExtendsEnumsType<'$$faketag'>;



export default HtmlTagEnum;
